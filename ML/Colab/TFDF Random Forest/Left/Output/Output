total dataframe : (8533, 52)
Use 2 thread(s) for training
Use /tmp/tmpn8wgxwu_ as temporary training directory
Reading training dataset...
Training tensor examples:
Features: {'start': <tf.Tensor 'data:0' shape=(None,) dtype=int64>, 'end': <tf.Tensor 'data_1:0' shape=(None,) dtype=int64>, 'startOffset': <tf.Tensor 'data_2:0' shape=(None,) dtype=float64>, 'endOffset': <tf.Tensor 'data_3:0' shape=(None,) dtype=float64>, 'duration': <tf.Tensor 'data_4:0' shape=(None,) dtype=float64>, 'sPackets': <tf.Tensor 'data_5:0' shape=(None,) dtype=int64>, 'rPackets': <tf.Tensor 'data_6:0' shape=(None,) dtype=int64>, 'sBytesSum': <tf.Tensor 'data_7:0' shape=(None,) dtype=int64>, 'rBytesSum': <tf.Tensor 'data_8:0' shape=(None,) dtype=int64>, 'sBytesMax': <tf.Tensor 'data_9:0' shape=(None,) dtype=float64>, 'rBytesMax': <tf.Tensor 'data_10:0' shape=(None,) dtype=float64>, 'sBytesMin': <tf.Tensor 'data_11:0' shape=(None,) dtype=float64>, 'rBytesMin': <tf.Tensor 'data_12:0' shape=(None,) dtype=float64>, 'sBytesAvg': <tf.Tensor 'data_13:0' shape=(None,) dtype=float64>, 'rBytesAvg': <tf.Tensor 'data_14:0' shape=(None,) dtype=float64>, 'sLoad': <tf.Tensor 'data_15:0' shape=(None,) dtype=float64>, 'rLoad': <tf.Tensor 'data_16:0' shape=(None,) dtype=float64>, 'sPayloadSum': <tf.Tensor 'data_17:0' shape=(None,) dtype=int64>, 'rPayloadSum': <tf.Tensor 'data_18:0' shape=(None,) dtype=int64>, 'sPayloadMax': <tf.Tensor 'data_19:0' shape=(None,) dtype=float64>, 'rPayloadMax': <tf.Tensor 'data_20:0' shape=(None,) dtype=float64>, 'sPayloadMin': <tf.Tensor 'data_21:0' shape=(None,) dtype=float64>, 'rPayloadMin': <tf.Tensor 'data_22:0' shape=(None,) dtype=float64>, 'sPayloadAvg': <tf.Tensor 'data_23:0' shape=(None,) dtype=float64>, 'rPayloadAvg': <tf.Tensor 'data_24:0' shape=(None,) dtype=float64>, 'sInterPacketAvg': <tf.Tensor 'data_25:0' shape=(None,) dtype=float64>, 'rInterPacketAvg': <tf.Tensor 'data_26:0' shape=(None,) dtype=float64>, 'sttl': <tf.Tensor 'data_27:0' shape=(None,) dtype=float64>, 'rttl': <tf.Tensor 'data_28:0' shape=(None,) dtype=float64>, 'sAckRate': <tf.Tensor 'data_29:0' shape=(None,) dtype=float64>, 'rAckRate': <tf.Tensor 'data_30:0' shape=(None,) dtype=float64>, 'sUrgRate': <tf.Tensor 'data_31:0' shape=(None,) dtype=float64>, 'rUrgRate': <tf.Tensor 'data_32:0' shape=(None,) dtype=float64>, 'sFinRate': <tf.Tensor 'data_33:0' shape=(None,) dtype=float64>, 'rFinRate': <tf.Tensor 'data_34:0' shape=(None,) dtype=float64>, 'sPshRate': <tf.Tensor 'data_35:0' shape=(None,) dtype=float64>, 'rPshRate': <tf.Tensor 'data_36:0' shape=(None,) dtype=float64>, 'sSynRate': <tf.Tensor 'data_37:0' shape=(None,) dtype=float64>, 'rSynRate': <tf.Tensor 'data_38:0' shape=(None,) dtype=float64>, 'sRstRate': <tf.Tensor 'data_39:0' shape=(None,) dtype=float64>, 'rRstRate': <tf.Tensor 'data_40:0' shape=(None,) dtype=float64>, 'sWinTCP': <tf.Tensor 'data_41:0' shape=(None,) dtype=float64>, 'rWinTCP': <tf.Tensor 'data_42:0' shape=(None,) dtype=float64>, 'sFragmentRate': <tf.Tensor 'data_43:0' shape=(None,) dtype=float64>, 'rFragmentRate': <tf.Tensor 'data_44:0' shape=(None,) dtype=float64>, 'sAckDelayMax': <tf.Tensor 'data_45:0' shape=(None,) dtype=float64>, 'rAckDelayMax': <tf.Tensor 'data_46:0' shape=(None,) dtype=float64>, 'sAckDelayMin': <tf.Tensor 'data_47:0' shape=(None,) dtype=float64>, 'rAckDelayMin': <tf.Tensor 'data_48:0' shape=(None,) dtype=float64>, 'sAckDelayAvg': <tf.Tensor 'data_49:0' shape=(None,) dtype=float64>, 'rAckDelayAvg': <tf.Tensor 'data_50:0' shape=(None,) dtype=float64>}
Label: Tensor("data_51:0", shape=(None,), dtype=int64)
Weights: None
Normalized tensor features:
 {'start': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast:0' shape=(None,) dtype=float32>), 'end': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_1:0' shape=(None,) dtype=float32>), 'startOffset': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_2:0' shape=(None,) dtype=float32>), 'endOffset': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_3:0' shape=(None,) dtype=float32>), 'duration': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_4:0' shape=(None,) dtype=float32>), 'sPackets': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_5:0' shape=(None,) dtype=float32>), 'rPackets': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_6:0' shape=(None,) dtype=float32>), 'sBytesSum': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_7:0' shape=(None,) dtype=float32>), 'rBytesSum': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_8:0' shape=(None,) dtype=float32>), 'sBytesMax': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_9:0' shape=(None,) dtype=float32>), 'rBytesMax': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_10:0' shape=(None,) dtype=float32>), 'sBytesMin': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_11:0' shape=(None,) dtype=float32>), 'rBytesMin': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_12:0' shape=(None,) dtype=float32>), 'sBytesAvg': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_13:0' shape=(None,) dtype=float32>), 'rBytesAvg': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_14:0' shape=(None,) dtype=float32>), 'sLoad': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_15:0' shape=(None,) dtype=float32>), 'rLoad': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_16:0' shape=(None,) dtype=float32>), 'sPayloadSum': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_17:0' shape=(None,) dtype=float32>), 'rPayloadSum': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_18:0' shape=(None,) dtype=float32>), 'sPayloadMax': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_19:0' shape=(None,) dtype=float32>), 'rPayloadMax': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_20:0' shape=(None,) dtype=float32>), 'sPayloadMin': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_21:0' shape=(None,) dtype=float32>), 'rPayloadMin': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_22:0' shape=(None,) dtype=float32>), 'sPayloadAvg': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_23:0' shape=(None,) dtype=float32>), 'rPayloadAvg': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_24:0' shape=(None,) dtype=float32>), 'sInterPacketAvg': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_25:0' shape=(None,) dtype=float32>), 'rInterPacketAvg': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_26:0' shape=(None,) dtype=float32>), 'sttl': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_27:0' shape=(None,) dtype=float32>), 'rttl': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_28:0' shape=(None,) dtype=float32>), 'sAckRate': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_29:0' shape=(None,) dtype=float32>), 'rAckRate': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_30:0' shape=(None,) dtype=float32>), 'sUrgRate': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_31:0' shape=(None,) dtype=float32>), 'rUrgRate': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_32:0' shape=(None,) dtype=float32>), 'sFinRate': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_33:0' shape=(None,) dtype=float32>), 'rFinRate': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_34:0' shape=(None,) dtype=float32>), 'sPshRate': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_35:0' shape=(None,) dtype=float32>), 'rPshRate': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_36:0' shape=(None,) dtype=float32>), 'sSynRate': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_37:0' shape=(None,) dtype=float32>), 'rSynRate': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_38:0' shape=(None,) dtype=float32>), 'sRstRate': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_39:0' shape=(None,) dtype=float32>), 'rRstRate': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_40:0' shape=(None,) dtype=float32>), 'sWinTCP': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_41:0' shape=(None,) dtype=float32>), 'rWinTCP': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_42:0' shape=(None,) dtype=float32>), 'sFragmentRate': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_43:0' shape=(None,) dtype=float32>), 'rFragmentRate': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_44:0' shape=(None,) dtype=float32>), 'sAckDelayMax': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_45:0' shape=(None,) dtype=float32>), 'rAckDelayMax': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_46:0' shape=(None,) dtype=float32>), 'sAckDelayMin': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_47:0' shape=(None,) dtype=float32>), 'rAckDelayMin': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_48:0' shape=(None,) dtype=float32>), 'sAckDelayAvg': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_49:0' shape=(None,) dtype=float32>), 'rAckDelayAvg': SemanticTensor(semantic=<Semantic.NUMERICAL: 1>, tensor=<tf.Tensor 'Cast_50:0' shape=(None,) dtype=float32>)}
Training dataset read in 0:00:09.108418. Found 6846 examples.
Training model...
Standard output detected as not visible to the user e.g. running in a notebook. Creating a training log redirection. If training gets stuck, try calling tfdf.keras.set_training_logs_redirection(False).
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
I0000 00:00:1739479299.934281    2862 kernel.cc:782] Start Yggdrasil model training
I0000 00:00:1739479299.934388    2862 kernel.cc:783] Collect training examples
I0000 00:00:1739479299.934409    2862 kernel.cc:795] Dataspec guide:
column_guides {
  column_name_pattern: "^__LABEL$"
  type: CATEGORICAL
  categorial {
    min_vocab_frequency: 0
    max_vocab_count: -1
  }
}
default_column_guide {
  categorial {
    max_vocab_count: 2000
  }
  discretized_numerical {
    maximum_num_bins: 255
  }
}
ignore_columns_without_guides: false
detect_numerical_as_discretized_numerical: false

I0000 00:00:1739479299.935172    2862 kernel.cc:401] Number of batches: 7
I0000 00:00:1739479299.935187    2862 kernel.cc:402] Number of examples: 6846
I0000 00:00:1739479299.940943    2862 kernel.cc:802] Training dataset:
Number of records: 6846
Number of columns: 52

Number of columns by type:
	NUMERICAL: 51 (98.0769%)
	CATEGORICAL: 1 (1.92308%)

Columns:

NUMERICAL: 51 (98.0769%)
	1: "duration" NUMERICAL mean:0.1528 min:1e-06 max:0.5 sd:0.204534
	2: "end" NUMERICAL mean:1.67844e+09 min:1.67844e+09 max:1.67845e+09 sd:0
	3: "endOffset" NUMERICAL mean:2879.15 min:4e-06 max:5439.49 sd:1567.4
	4: "rAckDelayAvg" NUMERICAL num-nas:4848 (70.8151%) mean:0.000735563 min:0.000147 max:0.007171 sd:0.000481151
	5: "rAckDelayMax" NUMERICAL num-nas:4848 (70.8151%) mean:0.00342242 min:0 max:0.135 sd:0.00643383
	6: "rAckDelayMin" NUMERICAL num-nas:4848 (70.8151%) mean:2.6026e-05 min:0 max:0.001 sd:0.000159213
	7: "rAckRate" NUMERICAL num-nas:4110 (60.0351%) mean:0.445772 min:0 max:1 sd:0.424924
	8: "rBytesAvg" NUMERICAL num-nas:4033 (58.9103%) mean:82.6167 min:36 max:294.833 sd:56.3539
	9: "rBytesMax" NUMERICAL num-nas:4033 (58.9103%) mean:362.248 min:36 max:1412 sd:552.843
	10: "rBytesMin" NUMERICAL num-nas:4033 (58.9103%) mean:48.1937 min:36 max:233 sd:10.4076
	11: "rBytesSum" NUMERICAL mean:1529.96 min:0 max:33000 sd:2751
	12: "rFinRate" NUMERICAL num-nas:4110 (60.0351%) mean:0.0379466 min:0 max:0.5 sd:0.104548
	13: "rFragmentRate" NUMERICAL num-nas:4094 (59.8013%) mean:0 min:0 max:0 sd:0
	14: "rInterPacketAvg" NUMERICAL num-nas:4049 (59.144%) mean:0.0108354 min:0 max:0.0814512 sd:0.0100177
	15: "rLoad" NUMERICAL mean:4.21221e+06 min:0 max:4.03667e+09 sd:7.24793e+07
	16: "rPackets" NUMERICAL mean:24.4065 min:0 max:750 sd:52.8115
	17: "rPayloadAvg" NUMERICAL num-nas:4033 (58.9103%) mean:33.5306 min:0 max:241.5 sd:53.9092
	18: "rPayloadMax" NUMERICAL num-nas:4033 (58.9103%) mean:313.826 min:0 max:1360 sd:550.808
	19: "rPayloadMin" NUMERICAL num-nas:4033 (58.9103%) mean:0.53075 min:0 max:205 sd:9.63058
	20: "rPayloadSum" NUMERICAL mean:406.033 min:0 max:7376 sd:1216.23
	21: "rPshRate" NUMERICAL num-nas:4110 (60.0351%) mean:0.205437 min:0 max:1 sd:0.222929
	22: "rRstRate" NUMERICAL num-nas:4110 (60.0351%) mean:0.0088231 min:0 max:0.5 sd:0.0395242
	23: "rSynRate" NUMERICAL num-nas:4110 (60.0351%) mean:0.545408 min:0 max:1 sd:0.417444
	24: "rUrgRate" NUMERICAL num-nas:4110 (60.0351%) mean:0 min:0 max:0 sd:0
	25: "rWinTCP" NUMERICAL num-nas:4110 (60.0351%) mean:6454.03 min:497.826 max:32371 sd:7680.92
	26: "rttl" NUMERICAL num-nas:4110 (60.0351%) mean:56.707 min:39 max:64 sd:7.90348
	27: "sAckDelayAvg" NUMERICAL num-nas:5381 (78.6006%) mean:0.010268 min:0.000132 max:0.077874 sd:0.0122053
	28: "sAckDelayMax" NUMERICAL num-nas:5381 (78.6006%) mean:0.0784369 min:0 max:0.496 sd:0.109176
	29: "sAckDelayMin" NUMERICAL num-nas:5381 (78.6006%) mean:0.000230034 min:0 max:0.039 sd:0.00237758
	30: "sAckRate" NUMERICAL num-nas:4839 (70.6836%) mean:0.958471 min:0.571 max:1 sd:0.0798131
	31: "sBytesAvg" NUMERICAL num-nas:767 (11.2036%) mean:79.7064 min:36 max:627.68 sd:61.576
	32: "sBytesMax" NUMERICAL num-nas:767 (11.2036%) mean:141.505 min:36 max:1500 sd:183.037
	33: "sBytesMin" NUMERICAL num-nas:767 (11.2036%) mean:67.1104 min:36 max:328 sd:57.304
	34: "sBytesSum" NUMERICAL mean:703.326 min:0 max:31384 sd:1403.78
	35: "sFinRate" NUMERICAL num-nas:4839 (70.6836%) mean:0.0945595 min:0 max:0.5 sd:0.131111
	36: "sFragmentRate" NUMERICAL num-nas:3602 (52.6147%) mean:0 min:0 max:0 sd:0
	37: "sInterPacketAvg" NUMERICAL num-nas:1805 (26.3658%) mean:0.00578796 min:0 max:0.320521 sd:0.0143767
	38: "sLoad" NUMERICAL mean:2.71885e+08 min:0 max:5.37244e+09 sd:4.66324e+08
	39: "sPackets" NUMERICAL mean:7.14914 min:0 max:76 sd:10.6305
	40: "sPayloadAvg" NUMERICAL num-nas:767 (11.2036%) mean:25.0155 min:0 max:575.68 sd:64.6778
	41: "sPayloadMax" NUMERICAL num-nas:767 (11.2036%) mean:86.4274 min:0 max:1448 sd:185.212
	42: "sPayloadMin" NUMERICAL num-nas:767 (11.2036%) mean:13.6993 min:0 max:300 sd:59.7875
	43: "sPayloadSum" NUMERICAL mean:318.921 min:0 max:28784 sd:971.672
	44: "sPshRate" NUMERICAL num-nas:4839 (70.6836%) mean:0.18015 min:0 max:1 sd:0.202827
	45: "sRstRate" NUMERICAL num-nas:4839 (70.6836%) mean:0.100008 min:0 max:0.429 sd:0.136661
	46: "sSynRate" NUMERICAL num-nas:4839 (70.6836%) mean:0.392836 min:0 max:1 sd:0.38026
	47: "sUrgRate" NUMERICAL num-nas:4839 (70.6836%) mean:0 min:0 max:0 sd:0
	48: "sWinTCP" NUMERICAL num-nas:4839 (70.6836%) mean:10326.5 min:6205.71 max:14600 sd:2610.89
	49: "start" NUMERICAL mean:1.67844e+09 min:1.67844e+09 max:1.67845e+09 sd:0
	50: "startOffset" NUMERICAL mean:2879 min:0 max:5439.49 sd:1567.36
	51: "sttl" NUMERICAL num-nas:4839 (70.6836%) mean:64 min:64 max:64 sd:0

CATEGORICAL: 1 (1.92308%)
	0: "__LABEL" CATEGORICAL integerized vocab-size:3 no-ood-item

Terminology:
	nas: Number of non-available (i.e. missing) values.
	ood: Out of dictionary.
	manually-defined: Attribute whose type is manually defined by the user, i.e., the type was not automatically inferred.
	tokenized: The attribute value is obtained through tokenization.
	has-dict: The attribute is attached to a string dictionary e.g. a categorical attribute stored as a string.
	vocab-size: Number of unique values.

I0000 00:00:1739479299.941085    2862 kernel.cc:818] Configure learner
I0000 00:00:1739479299.941301    2862 kernel.cc:831] Training config:
learner: "RANDOM_FOREST"
features: "^duration$"
features: "^end$"
features: "^endOffset$"
features: "^rAckDelayAvg$"
features: "^rAckDelayMax$"
features: "^rAckDelayMin$"
features: "^rAckRate$"
features: "^rBytesAvg$"
features: "^rBytesMax$"
features: "^rBytesMin$"
features: "^rBytesSum$"
features: "^rFinRate$"
features: "^rFragmentRate$"
features: "^rInterPacketAvg$"
features: "^rLoad$"
features: "^rPackets$"
features: "^rPayloadAvg$"
features: "^rPayloadMax$"
features: "^rPayloadMin$"
features: "^rPayloadSum$"
features: "^rPshRate$"
features: "^rRstRate$"
features: "^rSynRate$"
features: "^rUrgRate$"
features: "^rWinTCP$"
features: "^rttl$"
features: "^sAckDelayAvg$"
features: "^sAckDelayMax$"
features: "^sAckDelayMin$"
features: "^sAckRate$"
features: "^sBytesAvg$"
features: "^sBytesMax$"
features: "^sBytesMin$"
features: "^sBytesSum$"
features: "^sFinRate$"
features: "^sFragmentRate$"
features: "^sInterPacketAvg$"
features: "^sLoad$"
features: "^sPackets$"
features: "^sPayloadAvg$"
features: "^sPayloadMax$"
features: "^sPayloadMin$"
features: "^sPayloadSum$"
features: "^sPshRate$"
features: "^sRstRate$"
features: "^sSynRate$"
features: "^sUrgRate$"
features: "^sWinTCP$"
features: "^start$"
features: "^startOffset$"
features: "^sttl$"
label: "^__LABEL$"
task: CLASSIFICATION
random_seed: 123456
metadata {
  framework: "TF Keras"
}
pure_serving_model: false
[yggdrasil_decision_forests.model.random_forest.proto.random_forest_config] {
  num_trees: 300
  decision_tree {
    max_depth: 16
    min_examples: 5
    in_split_min_examples_check: true
    keep_non_leaf_label_distribution: true
    num_candidate_attributes: 0
    missing_value_policy: GLOBAL_IMPUTATION
    allow_na_conditions: false
    categorical_set_greedy_forward {
      sampling: 0.1
      max_num_items: -1
      min_item_frequency: 1
    }
    growing_strategy_local {
    }
    categorical {
      cart {
      }
    }
    axis_aligned_split {
    }
    internal {
      sorting_strategy: PRESORTED
    }
    uplift {
      min_examples_in_treatment: 5
      split_score: KULLBACK_LEIBLER
    }
  }
  winner_take_all_inference: true
  compute_oob_performances: true
  compute_oob_variable_importances: false
  num_oob_variable_importances_permutations: 1
  bootstrap_training_dataset: true
  bootstrap_size_ratio: 1
  adapt_bootstrap_size_ratio_for_maximum_training_duration: false
  sampling_with_replacement: true
}

I0000 00:00:1739479299.941746    2862 kernel.cc:834] Deployment config:
cache_path: "/tmp/tmpn8wgxwu_/working_cache"
num_threads: 2
try_resume_training: true

I0000 00:00:1739479299.944977    3073 kernel.cc:895] Train model
I0000 00:00:1739479299.945864    3073 random_forest.cc:427] Training random forest on 6846 example(s) and 51 feature(s).
I0000 00:00:1739479300.016723    3076 random_forest.cc:811] Training of tree  1/300 (tree index:0) done accuracy:0.914365 logloss:3.08661
I0000 00:00:1739479300.243026    3077 random_forest.cc:811] Training of tree  11/300 (tree index:10) done accuracy:0.921211 logloss:1.83118
I0000 00:00:1739479300.436492    3077 random_forest.cc:811] Training of tree  21/300 (tree index:20) done accuracy:0.922717 logloss:1.06641
I0000 00:00:1739479300.656723    3077 random_forest.cc:811] Training of tree  31/300 (tree index:30) done accuracy:0.923313 logloss:0.904535
I0000 00:00:1739479300.935019    3077 random_forest.cc:811] Training of tree  41/300 (tree index:40) done accuracy:0.925066 logloss:0.794698
I0000 00:00:1739479301.130449    3077 random_forest.cc:811] Training of tree  51/300 (tree index:50) done accuracy:0.925796 logloss:0.63524
I0000 00:00:1739479301.247060    3077 random_forest.cc:811] Training of tree  61/300 (tree index:60) done accuracy:0.92565 logloss:0.583808
I0000 00:00:1739479301.421415    3077 random_forest.cc:811] Training of tree  71/300 (tree index:70) done accuracy:0.925504 logloss:0.547917
I0000 00:00:1739479301.702572    3077 random_forest.cc:811] Training of tree  81/300 (tree index:81) done accuracy:0.925066 logloss:0.520728
I0000 00:00:1739479302.006770    3076 random_forest.cc:811] Training of tree  91/300 (tree index:90) done accuracy:0.925358 logloss:0.488616
I0000 00:00:1739479302.215634    3076 random_forest.cc:811] Training of tree  101/300 (tree index:99) done accuracy:0.924481 logloss:0.466071
I0000 00:00:1739479302.527811    3076 random_forest.cc:811] Training of tree  111/300 (tree index:110) done accuracy:0.925504 logloss:0.413085
I0000 00:00:1739479302.721154    3076 random_forest.cc:811] Training of tree  121/300 (tree index:120) done accuracy:0.925212 logloss:0.383226
I0000 00:00:1739479303.042304    3077 random_forest.cc:811] Training of tree  131/300 (tree index:130) done accuracy:0.925358 logloss:0.369837
I0000 00:00:1739479303.322188    3077 random_forest.cc:811] Training of tree  141/300 (tree index:140) done accuracy:0.925504 logloss:0.364436
I0000 00:00:1739479303.565519    3077 random_forest.cc:811] Training of tree  151/300 (tree index:151) done accuracy:0.925504 logloss:0.335282
I0000 00:00:1739479303.833426    3076 random_forest.cc:811] Training of tree  161/300 (tree index:161) done accuracy:0.925504 logloss:0.3353
I0000 00:00:1739479304.027621    3077 random_forest.cc:811] Training of tree  171/300 (tree index:170) done accuracy:0.925504 logloss:0.326678
I0000 00:00:1739479304.193999    3077 random_forest.cc:811] Training of tree  181/300 (tree index:180) done accuracy:0.925358 logloss:0.312051
I0000 00:00:1739479304.357937    3076 random_forest.cc:811] Training of tree  191/300 (tree index:190) done accuracy:0.925066 logloss:0.3069
I0000 00:00:1739479304.533860    3077 random_forest.cc:811] Training of tree  201/300 (tree index:200) done accuracy:0.924774 logloss:0.301943
I0000 00:00:1739479304.729766    3076 random_forest.cc:811] Training of tree  211/300 (tree index:211) done accuracy:0.92492 logloss:0.297209
I0000 00:00:1739479304.916089    3076 random_forest.cc:811] Training of tree  221/300 (tree index:221) done accuracy:0.925066 logloss:0.296953
I0000 00:00:1739479305.107666    3077 random_forest.cc:811] Training of tree  231/300 (tree index:230) done accuracy:0.925066 logloss:0.292265
I0000 00:00:1739479305.358021    3077 random_forest.cc:811] Training of tree  241/300 (tree index:240) done accuracy:0.925066 logloss:0.286375
I0000 00:00:1739479305.600638    3077 random_forest.cc:811] Training of tree  251/300 (tree index:250) done accuracy:0.925358 logloss:0.282493
I0000 00:00:1739479305.846491    3077 random_forest.cc:811] Training of tree  261/300 (tree index:260) done accuracy:0.925066 logloss:0.282458
I0000 00:00:1739479306.042253    3076 random_forest.cc:811] Training of tree  271/300 (tree index:270) done accuracy:0.925212 logloss:0.278099
I0000 00:00:1739479306.265594    3076 random_forest.cc:811] Training of tree  281/300 (tree index:279) done accuracy:0.925066 logloss:0.276513
I0000 00:00:1739479306.435460    3077 random_forest.cc:811] Training of tree  291/300 (tree index:290) done accuracy:0.925212 logloss:0.272222
I0000 00:00:1739479306.651291    3077 random_forest.cc:811] Training of tree  300/300 (tree index:299) done accuracy:0.925358 logloss:0.266424
I0000 00:00:1739479306.655991    3073 random_forest.cc:891] Final OOB metrics: accuracy:0.925358 logloss:0.266424
I0000 00:00:1739479306.710157    3073 kernel.cc:926] Export model in log directory: /tmp/tmpn8wgxwu_ with prefix 95421cd986e34ee0
I0000 00:00:1739479306.808880    3073 kernel.cc:944] Save model in resources
I0000 00:00:1739479306.816226    2862 abstract_model.cc:914] Model self evaluation:
Number of predictions (without weights): 6846
Number of predictions (with weights): 6846
Task: CLASSIFICATION
Label: __LABEL

Accuracy: 0.925358  CI95[W][0.919925 0.930521]
LogLoss: : 0.266424
ErrorRate: : 0.0746421

Default Accuracy: : 0.524394
Default LogLoss: : 0.691957
Default ErrorRate: : 0.475606

Confusion Table:
truth\prediction
      1     2
1  3216    40
2   471  3119
Total: 6846
